openapi: 3.0.0
info:
  title: Bus Payments & Rewards API
  description: Comprehensive API for bus payment system with offers, rewards, bookings, and refunds
  version: 2.0.0
  contact:
    name: API Support
    email: support@buspayments.com
servers:
  - url: http://localhost:5006
    description: Local development server

components:
  schemas:
    # Error Response
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
        - error

    # Success Response
    Success:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string

    # Enums
    MerchantCategory:
      type: string
      enum:
        - RESTAURANT
        - RETAIL_STORE
        - GAS_STATION
        - AIRLINE
        - HOTEL
        - E_COMMERCE
        - GROCERY_STORE
        - PHARMACY
        - ENTERTAINMENT_VENUE
        - HEALTHCARE_PROVIDER
        - TELECOM_PROVIDER
        - UTILITY_COMPANY
        - INSURANCE_COMPANY
        - EDUCATIONAL_INSTITUTION
        - AUTOMOTIVE_SERVICE
        - HOME_IMPROVEMENT
        - FASHION_RETAILER
        - ELECTRONICS_STORE
        - SUBSCRIPTION_SERVICE
        - FINANCIAL_SERVICE
        - FITNESS_CENTER

    CreditCardProduct:
      type: string
      enum:
        - BASIC
        - SILVER
        - GOLD
        - PLATINUM

    PaymentStatus:
      type: string
      enum:
        - PENDING
        - COMPLETED
        - FAILED
        - REFUNDED

    RefundStatus:
      type: string
      enum:
        - REQUESTED
        - APPROVED
        - DENIED
        - PROCESSED
        - COMPLETED

    RewardStatus:
      type: string
      enum:
        - EARNED
        - REDEEMED
        - EXPIRED

    OfferStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - EXPIRED

    PaymentPlanType:
      type: string
      enum:
        - INSTALLMENT
        - DEFERRED
        - SUBSCRIPTION

    PaymentPlanStatus:
      type: string
      enum:
        - ACTIVE
        - COMPLETED
        - CANCELLED
        - DEFAULTED

    # Customer schemas
    Customer:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        date_of_birth:
          type: string
          format: date
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - first_name
        - last_name
        - email

    CustomerCreate:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        date_of_birth:
          type: string
          format: date
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
      required:
        - first_name
        - last_name
        - email

    # Credit Card schemas
    CreditCard:
      type: object
      properties:
        id:
          type: integer
        customer_id:
          type: integer
        card_number:
          type: string
        card_type:
          type: string
        product_type:
          $ref: '#/components/schemas/CreditCardProduct'
        credit_limit:
          type: number
          format: decimal
        available_credit:
          type: number
          format: decimal
        is_active:
          type: boolean
        expiry_date:
          type: string
          format: date
        created_at:
          type: string
          format: date-time

    CreditCardCreate:
      type: object
      properties:
        card_number:
          type: string
        card_type:
          type: string
        product_type:
          $ref: '#/components/schemas/CreditCardProduct'
        credit_limit:
          type: number
          format: decimal
      required:
        - card_number
        - card_type
        - product_type
        - credit_limit

    # Payment schemas
    Payment:
      type: object
      properties:
        id:
          type: integer
        credit_card_id:
          type: integer
        amount:
          type: number
          format: decimal
        merchant_name:
          type: string
        reference_number:
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        transaction_date:
          type: string
          format: date-time
        description:
          type: string
        category:
          type: string

    PaymentCreate:
      type: object
      properties:
        credit_card_id:
          type: integer
        amount:
          type: number
          format: decimal
        merchant_name:
          type: string
        description:
          type: string
        category:
          type: string
      required:
        - credit_card_id
        - amount
        - merchant_name

    # Refund schemas
    Refund:
      type: object
      properties:
        id:
          type: integer
        refund_reference:
          type: string
        original_payment_id:
          type: integer
        booking_id:
          type: integer
        customer_id:
          type: integer
        refund_type:
          type: string
          enum: [booking_cancellation, dispute_resolution, goodwill]
        refund_amount:
          type: number
          format: decimal
        processing_fee:
          type: number
          format: decimal
        net_refund_amount:
          type: number
          format: decimal
        status:
          $ref: '#/components/schemas/RefundStatus'
        reason:
          type: string
        requested_date:
          type: string
          format: date-time
        approved_date:
          type: string
          format: date-time
        processed_date:
          type: string
          format: date-time
        completed_date:
          type: string
          format: date-time
        estimated_completion:
          type: string
          format: date-time

    RefundRequest:
      type: object
      properties:
        original_payment_id:
          type: integer
        booking_id:
          type: integer
        refund_type:
          type: string
          enum: [booking_cancellation, dispute_resolution, goodwill]
        refund_amount:
          type: number
          format: decimal
        processing_fee:
          type: number
          format: decimal
        reason:
          type: string
      required:
        - original_payment_id
        - refund_type
        - refund_amount
        - reason

    # Reward schemas
    Reward:
      type: object
      properties:
        id:
          type: integer
        customer_id:
          type: integer
        payment_id:
          type: integer
        points_earned:
          type: integer
        points_redeemed:
          type: integer
        status:
          $ref: '#/components/schemas/RewardStatus'
        expiry_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time

    # Offer schemas
    Offer:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        offer_type:
          type: string
        discount_percentage:
          type: number
          format: decimal
        discount_amount:
          type: number
          format: decimal
        min_purchase_amount:
          type: number
          format: decimal
        max_discount_amount:
          type: number
          format: decimal
        status:
          $ref: '#/components/schemas/OfferStatus'
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        merchant_category:
          $ref: '#/components/schemas/MerchantCategory'

    OfferCreate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        offer_type:
          type: string
        discount_percentage:
          type: number
          format: decimal
        discount_amount:
          type: number
          format: decimal
        min_purchase_amount:
          type: number
          format: decimal
        max_discount_amount:
          type: number
          format: decimal
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        merchant_category:
          $ref: '#/components/schemas/MerchantCategory'
      required:
        - title
        - description
        - offer_type

    # Merchant schemas
    Merchant:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        category:
          $ref: '#/components/schemas/MerchantCategory'
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        phone:
          type: string
        email:
          type: string
        is_active:
          type: boolean

    MerchantCreate:
      type: object
      properties:
        name:
          type: string
        category:
          $ref: '#/components/schemas/MerchantCategory'
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        phone:
          type: string
        email:
          type: string
      required:
        - name
        - category

    # Booking schemas
    Booking:
      type: object
      properties:
        id:
          type: integer
        booking_reference:
          type: string
        customer_id:
          type: integer
        booking_type:
          type: string
        booking_details:
          type: object
        total_amount:
          type: number
          format: decimal
        status:
          type: string
        created_at:
          type: string
          format: date-time

    # Payment Plan schemas
    PaymentPlan:
      type: object
      properties:
        id:
          type: integer
        customer_id:
          type: integer
        payment_id:
          type: integer
        plan_type:
          $ref: '#/components/schemas/PaymentPlanType'
        total_amount:
          type: number
          format: decimal
        number_of_installments:
          type: integer
        installment_amount:
          type: number
          format: decimal
        interest_rate:
          type: number
          format: decimal
        status:
          $ref: '#/components/schemas/PaymentPlanStatus'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date

    # Token schemas
    CardToken:
      type: object
      properties:
        token_id:
          type: string
        customer_id:
          type: integer
        masked_card_number:
          type: string
        card_type:
          type: string
        expiry_month:
          type: integer
        expiry_year:
          type: integer
        is_default:
          type: boolean
        status:
          type: string
        created_at:
          type: string
          format: date-time

    TokenCreate:
      type: object
      properties:
        customer_id:
          type: integer
        card_number:
          type: string
        expiry_month:
          type: integer
        expiry_year:
          type: integer
        cvv:
          type: string
        cardholder_name:
          type: string
        billing_address:
          type: object
      required:
        - customer_id
        - card_number
        - expiry_month
        - expiry_year
        - cvv
        - cardholder_name

paths:
  # Health Check
  /health:
    get:
      tags:
        - Health
      summary: Health check endpoint
      description: Check if the API is running
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time

  # Customer endpoints
  /api/customers:
    get:
      tags:
        - Customers
      summary: List all customers
      description: Get a paginated list of all customers
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of customers
          content:
            application/json:
              schema:
                type: object
                properties:
                  customers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
                  total:
                    type: integer
                  pages:
                    type: integer
                  current_page:
                    type: integer
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Customers
      summary: Create a new customer
      description: Create a new customer account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreate'
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Email already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/customers/{customer_id}:
    get:
      tags:
        - Customers
      summary: Get customer by ID
      description: Retrieve a specific customer by their ID
      parameters:
        - name: customer_id
          in: path
          required: true
          description: Customer ID
          schema:
            type: integer
      responses:
        '200':
          description: Customer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Customers
      summary: Update customer
      description: Update customer information
      parameters:
        - name: customer_id
          in: path
          required: true
          description: Customer ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreate'
      responses:
        '200':
          description: Customer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/customers/{customer_id}/credit-cards:
    get:
      tags:
        - Customers
      summary: Get customer credit cards
      description: Get all credit cards for a specific customer
      parameters:
        - name: customer_id
          in: path
          required: true
          description: Customer ID
          schema:
            type: integer
      responses:
        '200':
          description: List of credit cards
          content:
            application/json:
              schema:
                type: object
                properties:
                  credit_cards:
                    type: array
                    items:
                      $ref: '#/components/schemas/CreditCard'

    post:
      tags:
        - Customers
      summary: Add credit card to customer
      description: Add a new credit card to a customer's account
      parameters:
        - name: customer_id
          in: path
          required: true
          description: Customer ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardCreate'
      responses:
        '201':
          description: Credit card added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCard'

  /api/customers/{customer_id}/stats:
    get:
      tags:
        - Customers
      summary: Get customer statistics
      description: Get spending and reward statistics for a customer
      parameters:
        - name: customer_id
          in: path
          required: true
          description: Customer ID
          schema:
            type: integer
      responses:
        '200':
          description: Customer statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_spent:
                    type: number
                  total_rewards:
                    type: integer
                  active_offers:
                    type: integer

  # Payment endpoints
  /api/payments:
    get:
      tags:
        - Payments
      summary: List payments
      description: Get a list of payments with optional filtering
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 10
        - name: customer_id
          in: query
          schema:
            type: integer
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/PaymentStatus'
        - name: merchant_name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of payments
          content:
            application/json:
              schema:
                type: object
                properties:
                  payments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Payment'
                  total:
                    type: integer
                  pages:
                    type: integer
                  current_page:
                    type: integer
                  per_page:
                    type: integer

    post:
      tags:
        - Payments
      summary: Make a payment
      description: Process a new payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
      responses:
        '201':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Payment'
                  - type: object
                    properties:
                      points_earned:
                        type: integer

  /api/payments/{payment_id}:
    get:
      tags:
        - Payments
      summary: Get payment details
      description: Get detailed information about a specific payment
      parameters:
        - name: payment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Payment details
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Payment'
                  - type: object
                    properties:
                      credit_card:
                        $ref: '#/components/schemas/CreditCard'
                      customer:
                        $ref: '#/components/schemas/Customer'
                      rewards:
                        type: array
                        items:
                          $ref: '#/components/schemas/Reward'

  /api/payments/{payment_id}/refund:
    post:
      tags:
        - Payments
      summary: Refund a payment
      description: Process a refund for a completed payment
      parameters:
        - name: payment_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: decimal
                  description: Refund amount (defaults to full payment amount)
      responses:
        '200':
          description: Refund processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  refund_amount:
                    type: number
                  payment:
                    $ref: '#/components/schemas/Payment'

  /api/payments/customer/{customer_id}:
    get:
      tags:
        - Payments
      summary: Get customer payments
      description: Get all payments for a specific customer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 10
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Customer payments
          content:
            application/json:
              schema:
                type: object
                properties:
                  customer_id:
                    type: integer
                  customer_name:
                    type: string
                  payments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Payment'
                  total_payments:
                    type: integer
                  total_amount_spent:
                    type: number

  /api/payments/analytics/spending:
    get:
      tags:
        - Payments
      summary: Get spending analytics
      description: Get spending analytics and statistics
      parameters:
        - name: customer_id
          in: query
          schema:
            type: integer
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
        - name: group_by
          in: query
          schema:
            type: string
            enum: [day, week, month]
            default: month
      responses:
        '200':
          description: Spending analytics
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_amount:
                    type: number
                  total_transactions:
                    type: integer
                  average_transaction:
                    type: number
                  spending_by_category:
                    type: object
                  spending_by_time:
                    type: object

  # Refund endpoints
  /api/refunds/request:
    post:
      tags:
        - Refunds
      summary: Request a refund
      description: Submit a refund request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest'
      responses:
        '201':
          description: Refund request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  refund_id:
                    type: integer
                  refund_reference:
                    type: string
                  status:
                    type: string
                  refund_amount:
                    type: number
                  processing_fee:
                    type: number
                  net_refund_amount:
                    type: number
                  estimated_completion:
                    type: string
                    format: date-time
                  message:
                    type: string

  /api/refunds:
    get:
      tags:
        - Refunds
      summary: List refunds
      description: Get a list of refunds with filtering options
      parameters:
        - name: customer_id
          in: query
          schema:
            type: integer
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/RefundStatus'
        - name: refund_type
          in: query
          schema:
            type: string
            enum: [booking_cancellation, dispute_resolution, goodwill]
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of refunds
          content:
            application/json:
              schema:
                type: object
                properties:
                  refunds:
                    type: array
                    items:
                      $ref: '#/components/schemas/Refund'
                  total:
                    type: integer
                  pages:
                    type: integer
                  current_page:
                    type: integer
                  per_page:
                    type: integer

  /api/refunds/{refund_id}:
    get:
      tags:
        - Refunds
      summary: Get refund details
      description: Get detailed information about a specific refund
      parameters:
        - name: refund_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Refund details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'

  /api/refunds/{refund_id}/approve:
    put:
      tags:
        - Refunds
      summary: Approve a refund
      description: Approve a pending refund request
      parameters:
        - name: refund_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Refund approved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  refund_id:
                    type: integer
                  refund_reference:
                    type: string
                  status:
                    type: string
                  approved_date:
                    type: string
                    format: date-time
                  processed_date:
                    type: string
                    format: date-time
                  estimated_completion:
                    type: string
                    format: date-time
                  message:
                    type: string

  /api/refunds/{refund_id}/deny:
    put:
      tags:
        - Refunds
      summary: Deny a refund
      description: Deny a pending refund request
      parameters:
        - name: refund_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                denial_reason:
                  type: string
      responses:
        '200':
          description: Refund denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  refund_id:
                    type: integer
                  refund_reference:
                    type: string
                  status:
                    type: string
                  message:
                    type: string

  /api/refunds/points/cancel:
    post:
      tags:
        - Refunds
      summary: Cancel points redemption
      description: Cancel a points redemption and restore points
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reward_id:
                  type: integer
                cancellation_reason:
                  type: string
              required:
                - reward_id
                - cancellation_reason
      responses:
        '201':
          description: Points redemption cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  cancellation_id:
                    type: integer
                  cancellation_reference:
                    type: string
                  original_reward_id:
                    type: integer
                  points_to_restore:
                    type: integer
                  cancellation_fee_points:
                    type: integer
                  net_points_restored:
                    type: integer
                  status:
                    type: string
                  message:
                    type: string

  # Rewards endpoints
  /api/rewards/customer/{customer_id}:
    get:
      tags:
        - Rewards
      summary: Get customer rewards
      description: Get all rewards for a specific customer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/RewardStatus'
      responses:
        '200':
          description: Customer rewards
          content:
            application/json:
              schema:
                type: object
                properties:
                  rewards:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reward'

  /api/rewards/customer/{customer_id}/balance:
    get:
      tags:
        - Rewards
      summary: Get reward balance
      description: Get the current reward points balance for a customer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Reward balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  customer_id:
                    type: integer
                  total_points_earned:
                    type: integer
                  total_points_redeemed:
                    type: integer
                  available_points:
                    type: integer
                  expiring_points:
                    type: integer
                  next_expiry_date:
                    type: string
                    format: date

  /api/rewards/redeem:
    post:
      tags:
        - Rewards
      summary: Redeem reward points
      description: Redeem reward points for benefits
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: integer
                points_to_redeem:
                  type: integer
                redemption_type:
                  type: string
                  enum: [cash_back, gift_card, discount, merchandise]
                redemption_details:
                  type: object
              required:
                - customer_id
                - points_to_redeem
                - redemption_type
      responses:
        '201':
          description: Points redeemed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  redemption_id:
                    type: integer
                  points_redeemed:
                    type: integer
                  redemption_value:
                    type: number
                  remaining_balance:
                    type: integer
                  message:
                    type: string

  # Offers endpoints
  /api/offers:
    get:
      tags:
        - Offers
      summary: List offers
      description: Get a list of available offers
      parameters:
        - name: customer_id
          in: query
          schema:
            type: integer
        - name: category
          in: query
          schema:
            $ref: '#/components/schemas/MerchantCategory'
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/OfferStatus'
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of offers
          content:
            application/json:
              schema:
                type: object
                properties:
                  offers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Offer'

    post:
      tags:
        - Offers
      summary: Create an offer
      description: Create a new offer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferCreate'
      responses:
        '201':
          description: Offer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'

  /api/offers/{offer_id}:
    get:
      tags:
        - Offers
      summary: Get offer details
      description: Get detailed information about a specific offer
      parameters:
        - name: offer_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Offer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'

    put:
      tags:
        - Offers
      summary: Update an offer
      description: Update an existing offer
      parameters:
        - name: offer_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferCreate'
      responses:
        '200':
          description: Offer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'

    delete:
      tags:
        - Offers
      summary: Delete an offer
      description: Delete an existing offer
      parameters:
        - name: offer_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Offer deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /api/offers/{offer_id}/activate:
    post:
      tags:
        - Offers
      summary: Activate offer for customer
      description: Activate a specific offer for a customer
      parameters:
        - name: offer_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: integer
              required:
                - customer_id
      responses:
        '201':
          description: Offer activated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  activation_id:
                    type: integer

  /api/offers/categories:
    get:
      tags:
        - Offers
      summary: Get offer categories
      description: Get a list of available offer categories
      responses:
        '200':
          description: List of offer categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      type: string

  # Merchants endpoints
  /api/merchants:
    get:
      tags:
        - Merchants
      summary: List merchants
      description: Get a list of merchants
      parameters:
        - name: category
          in: query
          schema:
            $ref: '#/components/schemas/MerchantCategory'
        - name: city
          in: query
          schema:
            type: string
        - name: state
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of merchants
          content:
            application/json:
              schema:
                type: object
                properties:
                  merchants:
                    type: array
                    items:
                      $ref: '#/components/schemas/Merchant'

    post:
      tags:
        - Merchants
      summary: Create a merchant
      description: Create a new merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCreate'
      responses:
        '201':
          description: Merchant created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'

  /api/merchants/{merchant_id}:
    get:
      tags:
        - Merchants
      summary: Get merchant details
      description: Get detailed information about a specific merchant
      parameters:
        - name: merchant_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Merchant details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'

  /api/merchants/{merchant_id}/analytics:
    get:
      tags:
        - Merchants
      summary: Get merchant analytics
      description: Get analytics and statistics for a merchant
      parameters:
        - name: merchant_id
          in: path
          required: true
          schema:
            type: integer
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Merchant analytics
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_transactions:
                    type: integer
                  total_revenue:
                    type: number
                  average_transaction_amount:
                    type: number
                  top_customers:
                    type: array
                    items:
                      type: object

  # Card Token endpoints
  /api/tokens/create:
    post:
      tags:
        - Card Tokens
      summary: Create card token
      description: Create a secure token for a credit card
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          description: Token created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardToken'

  /api/tokens/{token_id}:
    get:
      tags:
        - Card Tokens
      summary: Get token details
      description: Get details of a specific card token
      parameters:
        - name: token_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Token details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardToken'

  /api/tokens/customer/{customer_id}:
    get:
      tags:
        - Card Tokens
      summary: Get customer tokens
      description: Get all tokens for a specific customer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer tokens
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokens:
                    type: array
                    items:
                      $ref: '#/components/schemas/CardToken'

  # Profile History endpoints
  /api/profile/customer/{customer_id}/history:
    get:
      tags:
        - Profile History
      summary: Get customer profile history
      description: Get the profile change history for a customer
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Profile history
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        customer_id:
                          type: integer
                        field_changed:
                          type: string
                        old_value:
                          type: string
                        new_value:
                          type: string
                        changed_at:
                          type: string
                          format: date-time
                        changed_by:
                          type: string

  # Booking Management endpoints
  /api/bookings:
    get:
      tags:
        - Bookings
      summary: List bookings
      description: Get a list of bookings
      parameters:
        - name: customer_id
          in: query
          schema:
            type: integer
        - name: status
          in: query
          schema:
            type: string
        - name: booking_type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of bookings
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Booking'

    post:
      tags:
        - Bookings
      summary: Create a booking
      description: Create a new booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: integer
                booking_type:
                  type: string
                booking_details:
                  type: object
                total_amount:
                  type: number
              required:
                - customer_id
                - booking_type
                - total_amount
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'

  /api/bookings/{booking_id}:
    get:
      tags:
        - Bookings
      summary: Get booking details
      description: Get detailed information about a specific booking
      parameters:
        - name: booking_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Booking details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'

  /api/bookings/{booking_id}/cancel:
    post:
      tags:
        - Bookings
      summary: Cancel a booking
      description: Cancel an existing booking
      parameters:
        - name: booking_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cancellation_reason:
                  type: string
      responses:
        '200':
          description: Booking cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  refund_amount:
                    type: number

  # Integration endpoints for third-party services
  /api/integration/simulator/status:
    get:
      tags:
        - Integration
      summary: Get simulator status
      description: Check the status of external service simulators
      responses:
        '200':
          description: Simulator status
          content:
            application/json:
              schema:
                type: object
                properties:
                  travel_service:
                    type: object
                  hotel_service:
                    type: object
                  shopping_service:
                    type: object

  /api/integration/offers/travel/airports:
    get:
      tags:
        - Integration
      summary: Get available airports
      description: Get list of available airports for travel bookings
      responses:
        '200':
          description: List of airports
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    name:
                      type: string
                    city:
                      type: string

  /api/integration/offers/travel/search-flights:
    get:
      tags:
        - Integration
      summary: Search flights
      description: Search for available flights
      parameters:
        - name: from
          in: query
          required: true
          schema:
            type: string
        - name: to
          in: query
          required: true
          schema:
            type: string
        - name: departure_date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: return_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Available flights
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /api/integration/offers/travel/book-flight:
    post:
      tags:
        - Integration
      summary: Book a flight
      description: Book a selected flight
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                flight_id:
                  type: string
                customer_id:
                  type: integer
                passengers:
                  type: array
                  items:
                    type: object
      responses:
        '201':
          description: Flight booked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  booking_reference:
                    type: string
                  total_amount:
                    type: number

  /api/integration/offers/hotel/cities:
    get:
      tags:
        - Integration
      summary: Get available cities
      description: Get list of cities with available hotels
      responses:
        '200':
          description: List of cities
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /api/integration/offers/hotel/search-hotels:
    get:
      tags:
        - Integration
      summary: Search hotels
      description: Search for available hotels
      parameters:
        - name: city
          in: query
          required: true
          schema:
            type: string
        - name: check_in
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: check_out
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Available hotels
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /api/integration/offers/shopping/categories:
    get:
      tags:
        - Integration
      summary: Get shopping categories
      description: Get list of available shopping categories
      responses:
        '200':
          description: Shopping categories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string

  /api/integration/offers/shopping/search:
    get:
      tags:
        - Integration
      summary: Search products
      description: Search for products in the shopping platform
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: category
          in: query
          schema:
            type: string
        - name: brand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

tags:
  - name: Health
    description: Health check endpoints
  - name: Customers
    description: Customer management operations
  - name: Payments
    description: Payment processing operations
  - name: Refunds
    description: Refund management operations
  - name: Rewards
    description: Reward points management
  - name: Offers
    description: Offer management operations
  - name: Merchants
    description: Merchant management operations
  - name: Card Tokens
    description: Card tokenization operations
  - name: Profile History
    description: Customer profile history tracking
  - name: Bookings
    description: Booking management operations
  - name: Integration
    description: Third-party service integration endpoints
